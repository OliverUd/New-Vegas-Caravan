@page "/"

@using System.Text
@using CaravanGame.Bots

<div class="board">
    <div class="row" style="grid-row: 1 / span 1">
        <DisplayCaravan Caravan="@Game.Players[PlayerPosition.Top].Caravans[0]" Upper=true CardAdded="StateHasChanged"></DisplayCaravan>
        <DisplayCaravan Caravan="@Game.Players[PlayerPosition.Top].Caravans[1]" Upper=true CardAdded="StateHasChanged"></DisplayCaravan>
        <DisplayCaravan Caravan="@Game.Players[PlayerPosition.Top].Caravans[2]" Upper=true CardAdded="StateHasChanged"></DisplayCaravan>
    </div>
    <div class="row" style="grid-row: 2 / span 1">
        <DisplayCaravan Caravan="@Game.Players[PlayerPosition.Bottom].Caravans[0]" Upper=false CardAdded="StateHasChanged"></DisplayCaravan>
        <DisplayCaravan Caravan="@Game.Players[PlayerPosition.Bottom].Caravans[1]" Upper=false CardAdded="StateHasChanged"></DisplayCaravan>
        <DisplayCaravan Caravan="@Game.Players[PlayerPosition.Bottom].Caravans[2]" Upper=false CardAdded="StateHasChanged"></DisplayCaravan>
    </div>
    <div class="hand" style="grid-row: 1 / span 1">
        @for (int card = 0; card < Game.Players[PlayerPosition.Top].Hand.Count; card++)
        {
            StringBuilder style = new("width: 12.5%; bottom: 10%; left: ");
            style.Append(((card + 1) * 4).ToString());
            style.Append('%');
            <DisplayCard Style="@style.ToString()" CardToShow="new()" Position="card"></DisplayCard>
        }
    </div>
    <div class="hand" style="grid-row: 2 / span 1">
        @for (int card = 0; card < Game.Players[PlayerPosition.Bottom].Hand.Count; card++)
        {
            StringBuilder style = new("width: 12.5%; top: 10%; left: ");
            style.Append(((card + 1) * 4).ToString());
            style.Append("%; ");
            style.Append(Game.SelectedCard == Game.Players[PlayerPosition.Bottom].Hand[card] ? "top: 5%;" : "top: 10%");
            <DisplayCard Style="@style.ToString()" CardToShow="@Game.Players[PlayerPosition.Bottom].Hand[card]" Position="card" OnClick="ChangeSelected"></DisplayCard>
        }
    </div>
    <button @onclick="TryDiscardCard">Discard Selected Card</button>
    <p>@Game.Winner</p>
</div>

@code
{
    private void ChangeSelected(int position)
    {
        Game.SelectedCard = Game.Players[PlayerPosition.Bottom].Hand[position];
    }

    private void TryDiscardCard() { Game.TryPlayMove(new Move(Game.Players[PlayerPosition.Bottom], MoveType.DiscardCard, card: Game.SelectedCard)); }
}